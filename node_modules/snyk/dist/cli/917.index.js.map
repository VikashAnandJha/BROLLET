{"version":3,"file":"917.index.js","mappings":"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","sources":["webpack://snyk/./src/cli/commands/test/format-test-error.ts","webpack://snyk/./src/cli/commands/test/iac-test-shim.ts","webpack://snyk/./src/cli/commands/test/index.ts","webpack://snyk/./src/cli/commands/test/set-default-test-options.ts","webpack://snyk/./src/cli/commands/test/utils.ts","webpack://snyk/./src/cli/commands/test/validate-credentials.ts","webpack://snyk/./src/cli/commands/test/validate-test-options.ts","webpack://snyk/./src/lib/errors/fail-on-error.ts.ts","webpack://snyk/./src/lib/formatters/open-source-sarif-output.ts","webpack://snyk/./src/lib/formatters/show-fix-tip.ts","webpack://snyk/./src/lib/formatters/test/display-result.ts","webpack://snyk/./src/lib/formatters/test/format-test-results.ts","webpack://snyk/./src/lib/protect-update-notification.ts","webpack://snyk/./src/lib/snyk-test/iac-test-result.ts","webpack://snyk/./src/lib/spotlight-vuln-notification.ts","webpack://snyk/./src/lib/vuln-helpers.ts"],"sourcesContent":["export function formatTestError(error) {\n  // Possible error cases:\n  // - the test found some vulns. `error.message` is a\n  // JSON-stringified\n  //   test result.\n  // - the flow failed, `error` is a real Error object.\n  // - the flow failed, `error` is a number or string\n  // describing the problem.\n  //\n  // To standardise this, make sure we use the best _object_ to\n  // describe the error.\n  let errorResponse;\n  if (error instanceof Error) {\n    errorResponse = error;\n  } else if (typeof error !== 'object') {\n    errorResponse = new Error(error);\n  } else {\n    try {\n      errorResponse = JSON.parse(error.message);\n    } catch (unused) {\n      errorResponse = error;\n    }\n  }\n  return errorResponse;\n}\n","import { assertIaCOptionsFlags } from './iac-local-execution/assert-iac-options-flag';\nimport { IaCTestOptions, TestReturnValue } from './iac-local-execution/types';\nimport { localTest } from './iac-local-execution/measurable-methods';\nimport { test as legacyTest } from '../../../lib';\nimport { getIacOrgSettings } from './iac-local-execution/org-settings/get-iac-org-settings';\nimport { isFeatureFlagSupportedForOrg } from '../../../lib/feature-flags';\nimport config from '../../../lib/config';\nconst camelCase = require('lodash.camelcase');\n\n/**\n * Shim around the new local execution test path and the legacy remote\n * test flow. We also locally deal with the way the legacy test flow exposes\n * the scanned files via the `options.iacDirFiles` object here so that\n * in the new flow we do not mutate the options object.\n */\nexport async function test(\n  pathToScan: string,\n  options: IaCTestOptions,\n): Promise<TestReturnValue> {\n  // Ensure that all flags are correct. We do this to ensure that the\n  // caller doesn't accidentally mistype --experimental and send their\n  // configuration files to our backend by accident.\n  assertIaCOptionsFlags(process.argv);\n  const iacOrgSettings = await getIacOrgSettings(options.org || config.org);\n  const shouldOptOutFromLocalExec = await isFeatureFlagSupportedForOrg(\n    camelCase('opt-out-from-local-exec-iac'),\n    iacOrgSettings.meta.org,\n  );\n  if (shouldOptOutFromLocalExec.ok || options.legacy) {\n    // this path allows users to opt-out from the local IaC scan which is GA and continue using the remote-processing legacy flow.\n    const results = await legacyTest(pathToScan, options);\n    return {\n      failures: options.iacDirFiles?.filter((file) => !!file.failureReason),\n      results,\n    };\n  }\n  return localTest(pathToScan, options);\n}\n","import * as Debug from 'debug';\nimport { EOL } from 'os';\nconst cloneDeep = require('lodash.clonedeep');\nconst assign = require('lodash.assign');\nimport chalk from 'chalk';\nimport { MissingArgError } from '../../../lib/errors';\n\nimport * as snyk from '../../../lib';\nimport { IacFileInDirectory, Options, TestOptions } from '../../../lib/types';\nimport { MethodArgs } from '../../args';\nimport { TestCommandResult } from '../../commands/types';\nimport { LegacyVulnApiResult, TestResult } from '../../../lib/snyk-test/legacy';\nimport { mapIacTestResult } from '../../../lib/snyk-test/iac-test-result';\n\nimport {\n  summariseErrorResults,\n  summariseVulnerableResults,\n} from '../../../lib/formatters';\nimport * as utils from './utils';\nimport { getIacDisplayErrorFileOutput } from '../../../lib/formatters/iac-output';\nimport { getEcosystemForTest, testEcosystem } from '../../../lib/ecosystems';\nimport { hasFixes, hasPatches, hasUpgrades } from '../../../lib/vuln-helpers';\nimport { FailOn } from '../../../lib/snyk-test/common';\nimport {\n  createErrorMappedResultsForJsonOutput,\n  extractDataToSendFromResults,\n} from '../../../lib/formatters/test/format-test-results';\n\nimport { test as iacTest } from './iac-test-shim';\nimport { validateCredentials } from './validate-credentials';\nimport { validateTestOptions } from './validate-test-options';\nimport { setDefaultTestOptions } from './set-default-test-options';\nimport { processCommandArgs } from '../process-command-args';\nimport { formatTestError } from './format-test-error';\nimport { displayResult } from '../../../lib/formatters/test/display-result';\nimport * as analytics from '../../../lib/analytics';\n\nimport {\n  getPackageJsonPathsContainingSnykDependency,\n  getProtectUpgradeWarningForPaths,\n} from '../../../lib/protect-update-notification';\nimport {\n  containsSpotlightVulnIds,\n  notificationForSpotlightVulns,\n} from '../../../lib/spotlight-vuln-notification';\n\nconst debug = Debug('snyk-test');\nconst SEPARATOR = '\\n-------------------------------------------------------\\n';\n\n// TODO: avoid using `as any` whenever it's possible\n\nexport default async function test(\n  ...args: MethodArgs\n): Promise<TestCommandResult> {\n  const { options: originalOptions, paths } = processCommandArgs(...args);\n  const options = setDefaultTestOptions(originalOptions);\n  validateTestOptions(options);\n  validateCredentials(options);\n\n  const packageJsonPathsWithSnykDepForProtect: string[] = getPackageJsonPathsContainingSnykDependency(\n    options.file,\n    paths,\n  );\n\n  analytics.add(\n    'upgradable-snyk-protect-paths',\n    packageJsonPathsWithSnykDepForProtect.length,\n  );\n\n  // Handles no image arg provided to the container command until\n  // a validation interface is implemented in the docker plugin.\n  if (options.docker && paths.length === 0) {\n    throw new MissingArgError();\n  }\n\n  const ecosystem = getEcosystemForTest(options);\n  if (ecosystem) {\n    try {\n      const commandResult = await testEcosystem(ecosystem, paths, options);\n      return commandResult;\n    } catch (error) {\n      if (error instanceof Error) {\n        throw error;\n      } else {\n        throw new Error(error);\n      }\n    }\n  }\n\n  const resultOptions: Array<Options & TestOptions> = [];\n  const results = [] as any[];\n\n  // Holds an array of scanned file metadata for output.\n  let iacScanFailures: IacFileInDirectory[] | undefined;\n\n  // Promise waterfall to test all other paths sequentially\n  for (const path of paths) {\n    // Create a copy of the options so a specific test can\n    // modify them i.e. add `options.file` etc. We'll need\n    // these options later.\n    const testOpts = cloneDeep(options);\n    testOpts.path = path;\n    testOpts.projectName = testOpts['project-name'];\n\n    let res: (TestResult | TestResult[]) | Error;\n    try {\n      if (options.iac) {\n        // this path is an experimental feature feature for IaC which does issue scanning locally without sending files to our Backend servers.\n        // once ready for GA, it is aimed to deprecate our remote-processing model, so IaC file scanning in the CLI is done locally.\n        const { results, failures } = await iacTest(path, testOpts);\n        res = results;\n        iacScanFailures = failures;\n      } else {\n        res = await snyk.test(path, testOpts);\n      }\n    } catch (error) {\n      // not throwing here but instead returning error response\n      // for legacy flow reasons.\n      res = formatTestError(error);\n    }\n\n    // Not all test results are arrays in order to be backwards compatible\n    // with scripts that use a callback with test. Coerce results/errors to be arrays\n    // and add the result options to each to be displayed\n    const resArray: any[] = Array.isArray(res) ? res : [res];\n\n    for (let i = 0; i < resArray.length; i++) {\n      const pathWithOptionalProjectName = utils.getPathWithOptionalProjectName(\n        path,\n        resArray[i],\n      );\n      results.push(assign(resArray[i], { path: pathWithOptionalProjectName }));\n      // currently testOpts are identical for each test result returned even if it's for multiple projects.\n      // we want to return the project names, so will need to be crafty in a way that makes sense.\n      if (!testOpts.projectNames) {\n        resultOptions.push(testOpts);\n      } else {\n        resultOptions.push(\n          assign(cloneDeep(testOpts), {\n            projectName: testOpts.projectNames[i],\n          }),\n        );\n      }\n    }\n  }\n\n  const vulnerableResults = results.filter(\n    (res) =>\n      (res.vulnerabilities && res.vulnerabilities.length) ||\n      (res.result &&\n        res.result.cloudConfigResults &&\n        res.result.cloudConfigResults.length),\n  );\n  const errorResults = results.filter((res) => res instanceof Error);\n  const notSuccess = errorResults.length > 0;\n  const foundVulnerabilities = vulnerableResults.length > 0;\n\n  // resultOptions is now an array of 1 or more options used for\n  // the tests results is now an array of 1 or more test results\n  // values depend on `options.json` value - string or object\n  const mappedResults = !options.iac\n    ? createErrorMappedResultsForJsonOutput(results)\n    : results.map(mapIacTestResult);\n\n  const {\n    stdout: dataToSend,\n    stringifiedData,\n    stringifiedJsonData,\n    stringifiedSarifData,\n  } = extractDataToSendFromResults(results, mappedResults, options);\n\n  if (options.json || options.sarif) {\n    // if all results are ok (.ok == true)\n    if (mappedResults.every((res) => res.ok)) {\n      return TestCommandResult.createJsonTestCommandResult(\n        stringifiedData,\n        stringifiedJsonData,\n        stringifiedSarifData,\n      );\n    }\n\n    const err = new Error(stringifiedData) as any;\n\n    if (foundVulnerabilities) {\n      if (options.failOn) {\n        const fail = shouldFail(vulnerableResults, options.failOn);\n        if (!fail) {\n          // return here to prevent failure\n          return TestCommandResult.createJsonTestCommandResult(\n            stringifiedData,\n            stringifiedJsonData,\n            stringifiedSarifData,\n          );\n        }\n      }\n      err.code = 'VULNS';\n      const dataToSendNoVulns = dataToSend;\n      delete dataToSendNoVulns.vulnerabilities;\n      err.jsonNoVulns = dataToSendNoVulns;\n    }\n\n    if (notSuccess) {\n      // Take the code of the first problem to go through error\n      // translation.\n      // Note: this is done based on the logic done below\n      // for non-json/sarif outputs, where we take the code of\n      // the first error.\n      err.code = errorResults[0].code;\n    }\n    err.json = stringifiedData;\n    err.jsonStringifiedResults = stringifiedJsonData;\n    err.sarifStringifiedResults = stringifiedSarifData;\n    throw err;\n  }\n\n  let response = results\n    .map((result, i) => {\n      return displayResult(\n        results[i] as LegacyVulnApiResult,\n        resultOptions[i],\n        result.foundProjectCount,\n      );\n    })\n    .join(`\\n${SEPARATOR}`);\n\n  if (notSuccess) {\n    debug(`Failed to test ${errorResults.length} projects, errors:`);\n    errorResults.forEach((err) => {\n      const errString = err.stack ? err.stack.toString() : err.toString();\n      debug('error: %s', errString);\n    });\n  }\n\n  let summaryMessage = '';\n  let errorResultsLength = errorResults.length;\n\n  if (options.iac && iacScanFailures) {\n    errorResultsLength = iacScanFailures.length || errorResults.length;\n\n    for (const reason of iacScanFailures) {\n      response += chalk.bold.red(getIacDisplayErrorFileOutput(reason));\n    }\n  }\n\n  if (results.length > 1) {\n    const projects = results.length === 1 ? 'project' : 'projects';\n    summaryMessage =\n      `\\n\\n\\nTested ${results.length} ${projects}` +\n      summariseVulnerableResults(vulnerableResults, options) +\n      summariseErrorResults(errorResultsLength) +\n      '\\n';\n  }\n\n  if (notSuccess) {\n    response += chalk.bold.red(summaryMessage);\n    const error = new Error(response) as any;\n    // take the code of the first problem to go through error\n    // translation\n    // HACK as there can be different errors, and we pass only the\n    // first one\n    error.code = errorResults[0].code;\n    error.userMessage = errorResults[0].userMessage;\n    error.strCode = errorResults[0].strCode;\n    throw error;\n  }\n\n  if (foundVulnerabilities) {\n    if (options.failOn) {\n      const fail = shouldFail(vulnerableResults, options.failOn);\n      if (!fail) {\n        // return here to prevent throwing failure\n        response += chalk.bold.green(summaryMessage);\n        response += EOL + EOL;\n        response += getProtectUpgradeWarningForPaths(\n          packageJsonPathsWithSnykDepForProtect,\n        );\n\n        return TestCommandResult.createHumanReadableTestCommandResult(\n          response,\n          stringifiedJsonData,\n          stringifiedSarifData,\n        );\n      }\n    }\n\n    response += chalk.bold.red(summaryMessage);\n\n    response += EOL + EOL;\n    const foundSpotlightVulnIds = containsSpotlightVulnIds(results);\n    const spotlightVulnsMsg = notificationForSpotlightVulns(\n      foundSpotlightVulnIds,\n    );\n    response += spotlightVulnsMsg;\n\n    const error = new Error(response) as any;\n    // take the code of the first problem to go through error\n    // translation\n    // HACK as there can be different errors, and we pass only the\n    // first one\n    error.code = vulnerableResults[0].code || 'VULNS';\n    error.userMessage = vulnerableResults[0].userMessage;\n    error.jsonStringifiedResults = stringifiedJsonData;\n    error.sarifStringifiedResults = stringifiedSarifData;\n    throw error;\n  }\n\n  response += chalk.bold.green(summaryMessage);\n  response += EOL + EOL;\n  response += getProtectUpgradeWarningForPaths(\n    packageJsonPathsWithSnykDepForProtect,\n  );\n\n  return TestCommandResult.createHumanReadableTestCommandResult(\n    response,\n    stringifiedJsonData,\n    stringifiedSarifData,\n  );\n}\n\nfunction shouldFail(vulnerableResults: any[], failOn: FailOn) {\n  // find reasons not to fail\n  if (failOn === 'all') {\n    return hasFixes(vulnerableResults);\n  }\n  if (failOn === 'upgradable') {\n    return hasUpgrades(vulnerableResults);\n  }\n  if (failOn === 'patchable') {\n    return hasPatches(vulnerableResults);\n  }\n  // should fail by default when there are vulnerable results\n  return vulnerableResults.length > 0;\n}\n","import config from '../../../lib/config';\nimport { Options, ShowVulnPaths, TestOptions } from '../../../lib/types';\n\nexport function setDefaultTestOptions<CommandOptions>(\n  options: Options & CommandOptions,\n): Options & TestOptions & CommandOptions {\n  const svpSupplied = (options['show-vulnerable-paths'] || '')\n    .toString()\n    .toLowerCase();\n\n  delete options['show-vulnerable-paths'];\n  return {\n    ...options,\n    // org fallback to config unless specified\n    org: options.org || config.org,\n    // making `show-vulnerable-paths` 'some' by default.\n    showVulnPaths: showVulnPathsMapping[svpSupplied] || 'some',\n  };\n}\n\nconst showVulnPathsMapping: Record<string, ShowVulnPaths> = {\n  false: 'none',\n  none: 'none',\n  true: 'some',\n  some: 'some',\n  all: 'all',\n};\n","import { TestResult } from '../../../lib/snyk-test/legacy';\n\nexport function getPathWithOptionalProjectName(\n  currPath: string,\n  testResult: Pick<TestResult, 'projectName'>,\n): string {\n  let projectName = testResult.projectName;\n  if (projectName) {\n    const index = projectName.indexOf('/');\n    if (index > -1) {\n      projectName = projectName.substr(index + 1);\n    } else {\n      projectName = undefined;\n    }\n  }\n  const pathWithOptionalProjectName = projectName\n    ? `${currPath}/${projectName}`\n    : currPath;\n\n  return pathWithOptionalProjectName;\n}\n","import {\n  apiTokenExists,\n  getOAuthToken,\n  getDockerToken,\n} from '../../../lib/api-token';\nimport { TestOptions, Options } from '../../../lib/types';\n\nexport function validateCredentials(options: Options & TestOptions): void {\n  try {\n    apiTokenExists();\n  } catch (err) {\n    if (getOAuthToken()) {\n      return;\n    } else if (options.docker && getDockerToken()) {\n      options.testDepGraphDockerEndpoint = '/docker-jwt/test-dependencies';\n      options.isDockerUser = true;\n    } else {\n      throw err;\n    }\n  }\n}\n","import { color } from '../../../lib/theme';\nimport { TestOptions, Options } from '../../../lib/types';\nimport { FAIL_ON, FailOn, SEVERITIES } from '../../../lib/snyk-test/common';\nimport { FailOnError } from '../../../lib/errors/fail-on-error.ts';\n\nexport function validateTestOptions(options: TestOptions & Options) {\n  if (\n    options.severityThreshold &&\n    !validateSeverityThreshold(options.severityThreshold)\n  ) {\n    throw new Error('INVALID_SEVERITY_THRESHOLD');\n  }\n\n  if (options.failOn && !validateFailOn(options.failOn)) {\n    const error = new FailOnError();\n    throw color.status.error(error.message);\n  }\n}\n\nfunction validateSeverityThreshold(severityThreshold) {\n  return SEVERITIES.map((s) => s.verboseName).indexOf(severityThreshold) > -1;\n}\n\nfunction validateFailOn(arg: FailOn) {\n  return Object.keys(FAIL_ON).includes(arg);\n}\n","import { CustomError } from './custom-error';\nimport { FAIL_ON } from '../snyk-test/common';\n\nexport class FailOnError extends CustomError {\n  private static ERROR_MESSAGE =\n    'Invalid fail on argument, please use one of: ' +\n    Object.keys(FAIL_ON).join(' | ');\n\n  constructor() {\n    super(FailOnError.ERROR_MESSAGE);\n  }\n}\n","import * as sarif from 'sarif';\nconst upperFirst = require('lodash.upperfirst');\nconst groupBy = require('lodash.groupby');\nconst map = require('lodash.map');\n\nimport { TestResult, SEVERITY, AnnotatedIssue } from '../snyk-test/legacy';\n\nconst LOCK_FILES_TO_MANIFEST_MAP = {\n  'Gemfile.lock': 'Gemfile',\n  'package-lock.json': 'package.json',\n  'yarn.lock': 'package.json',\n  'Gopkg.lock': 'Gopkg.toml',\n  'go.sum': 'go.mod',\n  'composer.lock': 'composer.json',\n  'Podfile.lock': 'Podfile',\n  'poetry.lock': 'pyproject.toml',\n};\n\nexport function createSarifOutputForOpenSource(\n  testResults: TestResult[],\n): sarif.Log {\n  return {\n    $schema:\n      'https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json',\n    version: '2.1.0',\n    runs: testResults.map(replaceLockfileWithManifest).map((testResult) => ({\n      tool: {\n        driver: {\n          name: 'Snyk Open Source',\n          rules: getRules(testResult),\n        },\n      },\n      results: getResults(testResult),\n    })),\n  };\n}\n\nfunction replaceLockfileWithManifest(testResult: TestResult): TestResult {\n  let targetFile = testResult.displayTargetFile || '';\n  for (const [key, replacer] of Object.entries(LOCK_FILES_TO_MANIFEST_MAP)) {\n    targetFile = targetFile.replace(new RegExp(key, 'g'), replacer);\n  }\n  return {\n    ...testResult,\n    vulnerabilities: testResult.vulnerabilities || [],\n    displayTargetFile: targetFile,\n  };\n}\n\nexport function getRules(testResult: TestResult): sarif.ReportingDescriptor[] {\n  const groupedVulnerabilities = groupBy(testResult.vulnerabilities, 'id');\n  return map(\n    groupedVulnerabilities,\n    ([vuln, ...moreVulns]): sarif.ReportingDescriptor => {\n      const cves = vuln.identifiers?.CVE?.join();\n      return {\n        id: vuln.id,\n        shortDescription: {\n          text: `${upperFirst(vuln.severity)} severity - ${\n            vuln.title\n          } vulnerability in ${vuln.packageName}`,\n        },\n        fullDescription: {\n          text: cves\n            ? `(${cves}) ${vuln.name}@${vuln.version}`\n            : `${vuln.name}@${vuln.version}`,\n        },\n        help: {\n          text: '',\n          markdown: `* Package Manager: ${testResult.packageManager}\n* ${vuln.type === 'license' ? 'Module' : 'Vulnerable module'}: ${vuln.name}\n* Introduced through: ${getIntroducedThrough(vuln)}\n#### Detailed paths\n${[vuln, ...moreVulns]\n  .map((item) => `* _Introduced through_: ${item.from.join(' › ')}`)\n  .join('\\n')}\n${vuln.description}`.replace(/##\\s/g, '# '),\n        },\n        properties: {\n          tags: [\n            'security',\n            ...(vuln.identifiers?.CWE || []),\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            testResult.packageManager!,\n          ],\n        },\n      };\n    },\n  );\n}\n\nexport function getResults(testResult): sarif.Result[] {\n  const groupedVulnerabilities = groupBy(testResult.vulnerabilities, 'id');\n  return map(\n    groupedVulnerabilities,\n    ([vuln]): sarif.Result => ({\n      ruleId: vuln.id,\n      level: getLevel(vuln),\n      message: {\n        text: `This file introduces a vulnerable ${vuln.packageName} package with a ${vuln.severity} severity vulnerability.`,\n      },\n      locations: [\n        {\n          physicalLocation: {\n            artifactLocation: {\n              uri: testResult.displayTargetFile,\n            },\n            region: {\n              startLine: vuln.lineNumber || 1,\n            },\n          },\n        },\n      ],\n    }),\n  );\n}\n\nexport function getLevel(vuln: AnnotatedIssue) {\n  switch (vuln.severity) {\n    case SEVERITY.CRITICAL:\n    case SEVERITY.HIGH:\n      return 'error';\n    case SEVERITY.MEDIUM:\n      return 'warning';\n    case SEVERITY.LOW:\n    default:\n      return 'note';\n  }\n}\n\nfunction getIntroducedThrough(vuln: AnnotatedIssue) {\n  const [firstFrom, secondFrom] = vuln.from || [];\n\n  return vuln.from.length > 2\n    ? `${firstFrom}, ${secondFrom} and others`\n    : vuln.from.length === 2\n    ? `${firstFrom} and ${secondFrom}`\n    : firstFrom;\n}\n","import chalk from 'chalk';\n\nimport { isLocalFolder } from '../detect';\nimport { TestResult } from '../snyk-test/legacy';\nimport { Options, SupportedProjectTypes, TestOptions } from '../types';\n\nexport function showFixTip(\n  projectType: SupportedProjectTypes,\n  res: TestResult,\n  options: TestOptions & Options,\n): string {\n  const snykFixSupported: SupportedProjectTypes[] = ['pip', 'poetry'];\n  if (!snykFixSupported.includes(projectType) || !isLocalFolder(options.path)) {\n    return '';\n  }\n\n  if (!res.ok && res.vulnerabilities.length > 0) {\n    return (\n      `Tip: Try ${chalk.bold(\n        '`snyk fix`',\n      )} to address these issues.${chalk.bold(\n        '`snyk fix`',\n      )} is a new CLI command in that aims to automatically apply the recommended updates for supported ecosystems.` +\n      '\\nSee documentation on how to enable this beta feature: https://docs.snyk.io/features/snyk-cli/fix-vulnerabilities-from-the-cli/automatic-remediation-with-snyk-fix'\n    );\n  }\n\n  return '';\n}\n","import chalk from 'chalk';\nimport { icon, color } from '../../theme';\nimport { isCI } from '../../../lib/is-ci';\nimport {\n  Options,\n  SupportedProjectTypes,\n  TestOptions,\n} from '../../../lib/types';\nimport { isLocalFolder } from '../../../lib/detect';\nimport { TestResult } from '../../../lib/snyk-test/legacy';\nimport { IacTestResponse } from '../../../lib/snyk-test/iac-test-result';\n\nimport {\n  dockerRemediationForDisplay,\n  formatTestMeta,\n} from '../../../lib/formatters';\nimport { getIacDisplayedOutput } from '../../../lib/formatters/iac-output';\nimport {\n  IacProjectType,\n  IacProjectTypes,\n  TEST_SUPPORTED_IAC_PROJECTS,\n} from '../../../lib/iac/constants';\nimport {\n  dockerUserCTA,\n  getDisplayedOutput,\n} from '../../../lib/formatters/test/format-test-results';\nimport { showMultiScanTip } from '../show-multi-scan-tip';\n\nexport function displayResult(\n  res: TestResult,\n  options: Options & TestOptions,\n  foundProjectCount?: number,\n) {\n  const meta = formatTestMeta(res, options);\n  const dockerAdvice = dockerRemediationForDisplay(res);\n  const projectType =\n    (res.packageManager as SupportedProjectTypes) || options.packageManager;\n  const localPackageTest = isLocalFolder(options.path);\n  let testingPath = options.path;\n  if (options.iac && res.targetFile) {\n    testingPath = res.targetFile;\n  }\n  const prefix = chalk.bold.white('\\nTesting ' + testingPath + '...\\n\\n');\n\n  // handle errors by extracting their message\n  if (res instanceof Error) {\n    return prefix + res.message;\n  }\n  const issuesText =\n    res.licensesPolicy ||\n    TEST_SUPPORTED_IAC_PROJECTS.includes(projectType as IacProjectTypes)\n      ? 'issues'\n      : 'vulnerabilities';\n  let pathOrDepsText = '';\n\n  if (res.dependencyCount) {\n    pathOrDepsText += res.dependencyCount + ' dependencies';\n  } else if (options.iac && res.targetFile) {\n    pathOrDepsText += res.targetFile;\n  } else {\n    pathOrDepsText += options.path;\n  }\n  const testedInfoText = `Tested ${pathOrDepsText} for known ${issuesText}`;\n\n  const multiProjectTip = showMultiScanTip(\n    projectType,\n    options,\n    foundProjectCount,\n  );\n  const multiProjAdvice = multiProjectTip ? `\\n\\n${multiProjectTip}` : '';\n\n  // OK  => no vulns found, return\n  if (res.ok && res.vulnerabilities.length === 0) {\n    const vulnPathsText = options.showVulnPaths\n      ? 'no vulnerable paths found.'\n      : 'none were found.';\n    const summaryOKText = color.status.success(\n      `${icon.VALID} ${testedInfoText}, ${vulnPathsText}`,\n    );\n    const nextStepsText = localPackageTest\n      ? '\\n\\nNext steps:' +\n        '\\n- Run `snyk monitor` to be notified ' +\n        'about new related vulnerabilities.' +\n        '\\n- Run `snyk test` as part of ' +\n        'your CI/test.'\n      : '';\n    // user tested a package@version and got 0 vulns back, but there were dev deps\n    // to consider\n    // to consider\n    const snykPackageTestTip: string = !(\n      options.docker ||\n      localPackageTest ||\n      options.dev\n    )\n      ? '\\n\\nTip: Snyk only tests production dependencies by default. You can try re-running with the `--dev` flag.'\n      : '';\n\n    const dockerCTA = dockerUserCTA(options);\n    return (\n      prefix +\n      meta +\n      '\\n\\n' +\n      summaryOKText +\n      multiProjAdvice +\n      (isCI()\n        ? ''\n        : dockerAdvice + nextStepsText + snykPackageTestTip + dockerCTA)\n    );\n  }\n\n  if (\n    TEST_SUPPORTED_IAC_PROJECTS.includes(res.packageManager as IacProjectType)\n  ) {\n    return getIacDisplayedOutput(\n      (res as any) as IacTestResponse,\n      testedInfoText,\n      meta,\n      prefix,\n    );\n  }\n\n  // NOT OK => We found some vulns, let's format the vulns info\n\n  return getDisplayedOutput(\n    res as TestResult,\n    options,\n    testedInfoText,\n    localPackageTest,\n    projectType,\n    meta,\n    prefix,\n    multiProjAdvice,\n    dockerAdvice,\n  );\n}\n","import {\n  Options,\n  OutputDataTypes,\n  SupportedProjectTypes,\n  TestOptions,\n} from '../../types';\nimport {\n  getReachabilityJson,\n  summariseReachableVulns,\n} from '../format-reachability';\nimport {\n  GroupedVuln,\n  SEVERITY,\n  TestResult,\n  VulnMetaData,\n} from '../../snyk-test/legacy';\nimport chalk from 'chalk';\nimport config from '../../config';\nimport * as cloneDeep from 'lodash.clonedeep';\nimport * as orderBy from 'lodash.orderby';\nimport * as analytics from '../../analytics';\nimport { formatIssuesWithRemediation } from '../remediation-based-format-issues';\nimport { formatIssues } from '../legacy-format-issue';\nimport { formatDockerBinariesIssues } from '../docker';\nimport { createSarifOutputForContainers } from '../sarif-output';\nimport { createSarifOutputForIac } from '../iac-output';\nimport { isNewVuln, isVulnFixable } from '../../vuln-helpers';\nimport { jsonStringifyLargeObject } from '../../json';\nimport { createSarifOutputForOpenSource } from '../open-source-sarif-output';\nimport { getSeverityValue } from '../get-severity-value';\nimport { showFixTip } from '../show-fix-tip';\nimport {\n  DockerFileAnalysisErrorCode,\n  facts as dockerFacts,\n} from 'snyk-docker-plugin/dist';\nimport { ScanResult } from '../../ecosystems/types';\n\nfunction createJsonResultOutput(jsonResult, options: Options) {\n  const jsonResultClone = cloneDeep(jsonResult);\n  delete jsonResultClone.scanResult;\n\n  formatJsonVulnerabilityStructure(jsonResultClone, options);\n  return jsonResultClone;\n}\n\nfunction formatJsonVulnerabilityStructure(jsonResult, options: Options) {\n  if (options['group-issues']) {\n    jsonResult.vulnerabilities = Object.values(\n      (jsonResult.vulnerabilities || []).reduce((acc, vuln): Record<\n        string,\n        any\n      > => {\n        vuln.from = [vuln.from].concat(acc[vuln.id]?.from || []);\n        vuln.name = [vuln.name].concat(acc[vuln.id]?.name || []);\n        acc[vuln.id] = vuln;\n        return acc;\n      }, {}),\n    );\n  }\n\n  if (jsonResult.vulnerabilities) {\n    jsonResult.vulnerabilities.forEach((vuln) => {\n      if (vuln.reachability) {\n        vuln.reachability = getReachabilityJson(vuln.reachability);\n      }\n    });\n  }\n}\n\nexport function extractDataToSendFromResults(\n  results,\n  mappedResults,\n  options: Options,\n): OutputDataTypes {\n  let sarifData = {};\n  let stringifiedSarifData = '';\n  if (options.sarif || options['sarif-file-output']) {\n    if (options.iac) {\n      sarifData = createSarifOutputForIac(results);\n    } else if (options.docker) {\n      sarifData = createSarifOutputForContainers(results);\n    } else {\n      sarifData = createSarifOutputForOpenSource(results);\n    }\n    stringifiedSarifData = jsonStringifyLargeObject(sarifData);\n  }\n\n  const jsonResults = mappedResults.map((res) =>\n    createJsonResultOutput(res, options),\n  );\n\n  // backwards compat - strip array IFF only one result\n  const jsonData = jsonResults.length === 1 ? jsonResults[0] : jsonResults;\n\n  let stringifiedJsonData = '';\n  if (options.json || options['json-file-output']) {\n    stringifiedJsonData = jsonStringifyLargeObject(jsonData);\n  }\n\n  const dataToSend = options.sarif ? sarifData : jsonData;\n  const stringifiedData = options.sarif\n    ? stringifiedSarifData\n    : stringifiedJsonData;\n\n  return {\n    stdout: dataToSend, // this is for the human-readable stdout output and is set even if --json or --sarif is set\n    stringifiedData, // this will be used to display either the Snyk or SARIF format JSON to stdout if --json or --sarif is set\n    stringifiedJsonData, // this will be used for the --json-file-output=<file.json> option\n    stringifiedSarifData, // this will be used for the --sarif-file-output=<file.json> option\n  };\n}\n\nexport function createErrorMappedResultsForJsonOutput(results) {\n  const errorMappedResults = results.map((result) => {\n    // add json for when thrown exception\n    if (result instanceof Error) {\n      return {\n        ok: false,\n        error: result.message,\n        path: (result as any).path,\n      };\n    }\n    return result;\n  });\n\n  return errorMappedResults;\n}\n\nexport function getDisplayedOutput(\n  res: TestResult,\n  options: Options & TestOptions,\n  testedInfoText: string,\n  localPackageTest: any,\n  projectType: SupportedProjectTypes,\n  meta: string,\n  prefix: string,\n  multiProjAdvice: string,\n  dockerAdvice: string,\n): string {\n  const vulnCount = res.vulnerabilities && res.vulnerabilities.length;\n  const singleVulnText = res.licensesPolicy ? 'issue' : 'vulnerability';\n  const multipleVulnsText = res.licensesPolicy ? 'issues' : 'vulnerabilities';\n\n  // Text will look like so:\n  // 'found 232 vulnerabilities, 404 vulnerable paths.'\n  let vulnCountText =\n    `found ${res.uniqueCount} ` +\n    (res.uniqueCount === 1 ? singleVulnText : multipleVulnsText);\n\n  // Docker is currently not supported as num of paths is inaccurate due to trimming of paths to reduce size.\n  if (options.showVulnPaths && !options.docker) {\n    vulnCountText += `, ${vulnCount} vulnerable `;\n\n    if (vulnCount === 1) {\n      vulnCountText += 'path.';\n    } else {\n      vulnCountText += 'paths.';\n    }\n  } else {\n    vulnCountText += '.';\n  }\n\n  const reachableVulnsText =\n    options.reachableVulns && vulnCount > 0\n      ? ` ${summariseReachableVulns(res.vulnerabilities)}`\n      : '';\n\n  const summary =\n    testedInfoText +\n    ', ' +\n    chalk.red.bold(vulnCountText) +\n    chalk.blue.bold(reachableVulnsText);\n\n  const fixTip = showFixTip(projectType, res, options);\n  const fixAdvice = fixTip ? `\\n\\n${fixTip}` : '';\n\n  const dockerfileWarning = getDockerfileWarning(res.scanResult);\n  const dockerSuggestion = getDockerSuggestionText(\n    options,\n    config,\n    res?.docker?.baseImage,\n  );\n  const dockerDocsLink = getDockerRemediationDocsLink(dockerAdvice, config);\n\n  const vulns = res.vulnerabilities || [];\n  const groupedVulns = groupVulnerabilities(vulns);\n  const sortedGroupedVulns: GroupedVuln[] = orderBy(\n    groupedVulns,\n    ['metadata.severityValue', 'metadata.name'],\n    ['asc', 'desc'],\n  );\n  const filteredSortedGroupedVulns = sortedGroupedVulns.filter(\n    (vuln) => vuln.metadata.packageManager !== 'upstream',\n  );\n  const binariesSortedGroupedVulns = sortedGroupedVulns.filter(\n    (vuln) => vuln.metadata.packageManager === 'upstream',\n  );\n\n  let groupedVulnInfoOutput;\n  if (res.remediation) {\n    analytics.add('actionableRemediation', true);\n    groupedVulnInfoOutput = formatIssuesWithRemediation(\n      filteredSortedGroupedVulns,\n      res.remediation,\n      options,\n    );\n  } else {\n    analytics.add('actionableRemediation', false);\n    groupedVulnInfoOutput = filteredSortedGroupedVulns.map((vuln) =>\n      formatIssues(vuln, options),\n    );\n  }\n\n  const groupedDockerBinariesVulnInfoOutput =\n    res.docker && binariesSortedGroupedVulns.length\n      ? formatDockerBinariesIssues(\n          binariesSortedGroupedVulns,\n          res.docker.binariesVulns,\n          options,\n        )\n      : [];\n\n  let body =\n    groupedVulnInfoOutput.join('\\n\\n') +\n    '\\n\\n' +\n    groupedDockerBinariesVulnInfoOutput.join('\\n\\n') +\n    '\\n\\n' +\n    meta;\n\n  if (res.remediation) {\n    body = summary + body + fixAdvice;\n  } else {\n    body = body + '\\n\\n' + summary + fixAdvice;\n  }\n\n  const ignoredIssues = '';\n  const dockerCTA = dockerUserCTA(options);\n  return (\n    prefix +\n    body +\n    multiProjAdvice +\n    ignoredIssues +\n    dockerAdvice +\n    dockerfileWarning +\n    dockerSuggestion +\n    dockerDocsLink +\n    dockerCTA\n  );\n}\n\nexport function dockerUserCTA(options) {\n  if (options.isDockerUser) {\n    return '\\n\\nFor more free scans that keep your images secure, sign up to Snyk at https://dockr.ly/3ePqVcp';\n  }\n  return '';\n}\n\nfunction getDockerSuggestionText(options, config, baseImageRes): string {\n  if (!options.docker || options.isDockerUser) {\n    return '';\n  }\n\n  let dockerSuggestion = '';\n  if (config && config.disableSuggestions !== 'true') {\n    const optOutSuggestions =\n      '\\n\\nTo remove this message in the future, please run `snyk config set disableSuggestions=true`';\n    if (!options.file) {\n      if (!baseImageRes) {\n        dockerSuggestion +=\n          chalk.bold.white(\n            '\\n\\nSnyk wasn’t able to auto detect the base image, use `--file` option to get base image remediation advice.' +\n              `\\nExample: $ snyk container test ${options.path} --file=path/to/Dockerfile`,\n          ) + optOutSuggestions;\n      }\n    } else if (!options['exclude-base-image-vulns']) {\n      dockerSuggestion +=\n        chalk.bold.white(\n          '\\n\\nPro tip: use `--exclude-base-image-vulns` to exclude from display Docker base image vulnerabilities.',\n        ) + optOutSuggestions;\n    }\n  }\n  return dockerSuggestion;\n}\nfunction getDockerfileWarning(scanResult: ScanResult | undefined): string {\n  if (!scanResult) {\n    return '';\n  }\n\n  const fact = scanResult.facts.find(\n    (fact) => fact.type === 'dockerfileAnalysis',\n  );\n  if (!fact) {\n    return '';\n  }\n\n  const dockerfileAnalysisFact = fact as dockerFacts.DockerfileAnalysisFact;\n  if (!dockerfileAnalysisFact.data.error) {\n    return '';\n  }\n\n  let userMessage = chalk.yellow(\n    '\\n\\nWarning: Unable to analyse Dockerfile provided through `--file`.',\n  );\n\n  switch (dockerfileAnalysisFact.data.error.code) {\n    case DockerFileAnalysisErrorCode.BASE_IMAGE_NAME_NOT_FOUND:\n      userMessage += chalk.yellow(\n        '\\n         Dockerfile must begin with a FROM instruction. This may be after parser directives, comments, and globally scoped ARGs.',\n      );\n      break;\n    case DockerFileAnalysisErrorCode.BASE_IMAGE_NON_RESOLVABLE:\n      userMessage += chalk.yellow(\n        '\\n         Dockerfile must have default values for all ARG instructions.',\n      );\n      break;\n  }\n\n  return userMessage;\n}\n\nfunction getDockerRemediationDocsLink(dockerAdvice: string, config): string {\n  if (config.disableSuggestions === 'true' || dockerAdvice.length === 0) {\n    return '';\n  }\n\n  return (\n    chalk.white('\\n\\nLearn more: ') +\n    chalk.white.underline(\n      'https://docs.snyk.io/products/snyk-container/getting-around-the-snyk-container-ui/base-image-detection',\n    )\n  );\n}\n\nexport function groupVulnerabilities(\n  vulns,\n): {\n  [vulnId: string]: GroupedVuln;\n} {\n  return vulns.reduce((map, curr) => {\n    if (!map[curr.id]) {\n      map[curr.id] = {};\n      map[curr.id].list = [];\n      map[curr.id].metadata = metadataForVuln(curr);\n      map[curr.id].isIgnored = false;\n      map[curr.id].isPatched = false;\n      // Extra added fields for ease of handling\n      map[curr.id].title = curr.title;\n      map[curr.id].note = curr.note;\n      map[curr.id].severity = curr.severity as SEVERITY;\n      map[curr.id].originalSeverity = curr.originalSeverity as SEVERITY;\n      map[curr.id].isNew = isNewVuln(curr);\n      map[curr.id].name = curr.name;\n      map[curr.id].version = curr.version;\n      map[curr.id].fixedIn = curr.fixedIn;\n      map[curr.id].dockerfileInstruction = curr.dockerfileInstruction;\n      map[curr.id].dockerBaseImage = curr.dockerBaseImage;\n      map[curr.id].nearestFixedInVersion = curr.nearestFixedInVersion;\n      map[curr.id].legalInstructionsArray = curr.legalInstructionsArray;\n      map[curr.id].reachability = curr.reachability;\n    }\n\n    map[curr.id].list.push(curr);\n    if (!map[curr.id].isFixable) {\n      map[curr.id].isFixable = isVulnFixable(curr);\n    }\n\n    if (!map[curr.id].note) {\n      map[curr.id].note = !!curr.note;\n    }\n\n    return map;\n  }, {});\n}\n\nfunction metadataForVuln(vuln): VulnMetaData {\n  return {\n    id: vuln.id,\n    title: vuln.title,\n    description: vuln.description,\n    type: vuln.type,\n    name: vuln.name,\n    info: vuln.info,\n    severity: vuln.severity,\n    severityValue: getSeverityValue(vuln.severity),\n    isNew: isNewVuln(vuln),\n    version: vuln.version,\n    packageManager: vuln.packageManager,\n  };\n}\n","import { EOL } from 'os';\nimport * as theme from './theme';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as createDebug from 'debug';\n\nconst debug = createDebug('snyk-protect-update-notification');\n\nexport function getProtectUpgradeWarningForPaths(\n  packageJsonPaths: string[],\n): string {\n  try {\n    if (packageJsonPaths?.length > 0) {\n      let message = theme.color.status.warn(\n        `${theme.icon.WARNING} WARNING: It looks like you have the \\`snyk\\` dependency in the \\`package.json\\` file(s) at the following path(s):` +\n          EOL,\n      );\n\n      packageJsonPaths.forEach((p) => {\n        message += theme.color.status.warn(`  - ${p}` + EOL);\n      });\n\n      const githubReadmeUrlShort = 'https://snyk.co/ud1cR'; // https://github.com/snyk/snyk/tree/master/packages/snyk-protect#migrating-from-snyk-protect-to-snykprotect\n\n      message += theme.color.status.warn(\n        `For more information and migration instructions, see ${githubReadmeUrlShort}` +\n          EOL,\n      );\n\n      return message;\n    } else {\n      return '';\n    }\n  } catch (e) {\n    debug('Error in getProtectUpgradeWarningForPaths()', e);\n    return '';\n  }\n}\n\nexport function packageJsonFileExistsInDirectory(\n  directoryPath: string,\n): boolean {\n  try {\n    const packageJsonPath = path.resolve(directoryPath, 'package.json');\n    const fileExists = fs.existsSync(packageJsonPath);\n    return fileExists;\n  } catch (e) {\n    debug('Error in packageJsonFileExistsInDirectory()', e);\n    return false;\n  }\n}\n\nexport function checkPackageJsonForSnykDependency(\n  packageJsonPath: string,\n): boolean {\n  try {\n    const fileExists = fs.existsSync(packageJsonPath);\n    if (fileExists) {\n      const packageJson = fs.readFileSync(packageJsonPath, 'utf8');\n      const packageJsonObject = JSON.parse(packageJson);\n      const snykDependency = packageJsonObject.dependencies['snyk'];\n      if (snykDependency) {\n        return true;\n      }\n    }\n  } catch (e) {\n    debug('Error in checkPackageJsonForSnykDependency()', e);\n  }\n  return false;\n}\n\nexport function getPackageJsonPathsContainingSnykDependency(\n  fileOption: string | undefined,\n  paths: string[],\n): string[] {\n  const packageJsonPathsWithSnykDepForProtect: string[] = [];\n\n  try {\n    if (fileOption) {\n      if (\n        fileOption.endsWith('package.json') ||\n        fileOption.endsWith('package-lock.json')\n      ) {\n        const directoryWithPackageJson = path.dirname(fileOption);\n        if (packageJsonFileExistsInDirectory(directoryWithPackageJson)) {\n          const packageJsonPath = path.resolve(\n            directoryWithPackageJson,\n            'package.json',\n          );\n          const packageJsonContainsSnykDep = checkPackageJsonForSnykDependency(\n            packageJsonPath,\n          );\n          if (packageJsonContainsSnykDep) {\n            packageJsonPathsWithSnykDepForProtect.push(packageJsonPath);\n          }\n        }\n      }\n    } else {\n      paths.forEach((testPath) => {\n        if (packageJsonFileExistsInDirectory(testPath)) {\n          const packageJsonPath = path.resolve(testPath, 'package.json');\n          const packageJsonContainsSnykDep = checkPackageJsonForSnykDependency(\n            packageJsonPath,\n          );\n          if (packageJsonContainsSnykDep) {\n            packageJsonPathsWithSnykDepForProtect.push(packageJsonPath);\n          }\n        }\n      });\n    }\n  } catch (e) {\n    debug('Error in getPackageJsonPathsContainingSnykDependency()', e);\n  }\n\n  return packageJsonPathsWithSnykDepForProtect;\n}\n","import { BasicResultData, SEVERITY, TestDepGraphMeta } from './legacy';\n\nexport interface AnnotatedIacIssue {\n  id: string;\n  title: string;\n  description?: string;\n  severity: SEVERITY | 'none';\n  isIgnored: boolean;\n  cloudConfigPath: string[];\n  subType: string;\n  path?: string[];\n  documentation?: string;\n  isGeneratedByCustomRule?: boolean;\n  // Legacy fields from Registry, unused.\n  name?: string;\n  from?: string[];\n  lineNumber?: number;\n  iacDescription: {\n    issue: string;\n    impact: string;\n    resolve: string;\n  };\n}\n\ntype FILTERED_OUT_FIELDS = 'cloudConfigPath' | 'name' | 'from';\n\nexport interface IacTestResponse extends BasicResultData {\n  path: string;\n  targetFile: string;\n  projectName: string;\n  displayTargetFile: string; // used for display only\n  foundProjectCount: number;\n  meta: TestDepGraphMeta;\n  result: {\n    cloudConfigResults: AnnotatedIacIssue[];\n    projectType: string;\n  };\n}\n\nconst IAC_ISSUES_KEY = 'infrastructureAsCodeIssues';\n\nexport function mapIacTestResult(\n  iacTest: IacTestResponse,\n): MappedIacTestResponse | IacTestError {\n  if (iacTest instanceof Error) {\n    return {\n      ok: false,\n      error: iacTest.message,\n      path: (iacTest as any).path,\n    };\n  }\n\n  const infrastructureAsCodeIssues =\n    iacTest?.result?.cloudConfigResults.map(mapIacIssue) || [];\n  const {\n    result: { projectType },\n    ...filteredIacTest\n  } = iacTest;\n  return {\n    ...filteredIacTest,\n    projectType,\n    ok: infrastructureAsCodeIssues.length === 0,\n    [IAC_ISSUES_KEY]: infrastructureAsCodeIssues,\n  };\n}\n\n/**\n * The following types represent manipulations to the data structure returned from Registry's `test-iac`.\n * These manipulations are being done prior to outputing as JSON, for renaming fields only.\n * The types above, IacTestResult & AnnotatedIacIssue, represent how the response from Registry actually is.\n * These were introduced in order to prevent cascading complex changes caused by changing Registry's `test-iac` response.\n */\nexport interface IacTestError {\n  ok: boolean;\n  error: string;\n  path: string;\n}\n\nexport interface MappedIacTestResponse extends Omit<IacTestResponse, 'result'> {\n  [IAC_ISSUES_KEY]: MappedAnnotatedIacIssue[];\n  projectType: string;\n}\n\nexport interface MappedAnnotatedIacIssue\n  extends Omit<AnnotatedIacIssue, FILTERED_OUT_FIELDS> {\n  path: string[];\n}\n\nexport function mapIacIssue(\n  iacIssue: AnnotatedIacIssue,\n): MappedAnnotatedIacIssue {\n  // filters out & renames properties we're getting from registry and don't need for the JSON output.\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { cloudConfigPath: path, name, from, ...mappedIacIssue } = iacIssue;\n  return { ...mappedIacIssue, path };\n}\n","import * as theme from './theme';\nimport * as createDebug from 'debug';\nimport { EOL } from 'os';\n\nconst debug = createDebug('snyk-spotlight-vuln-notification');\n\nconst spotlightVulnIds = ['SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720'];\n\nexport function containsSpotlightVulnIds(results: any[]): string[] {\n  try {\n    const spotlightVulnsFound = new Set<string>();\n    for (const r of results) {\n      if (r.vulnerabilities) {\n        for (const v of r.vulnerabilities) {\n          if (spotlightVulnIds.includes(v.id)) {\n            spotlightVulnsFound.add(v.id);\n          }\n        }\n      }\n    }\n    return [...spotlightVulnsFound];\n  } catch (err) {\n    debug('Error in containsSpotlightVulnIds()', err);\n    return [];\n  }\n}\n\ntype VulnerabilityId = string;\n\nexport function notificationForSpotlightVulns(\n  foundSpotlightVulnsIds: VulnerabilityId[],\n) {\n  try {\n    if (foundSpotlightVulnsIds.length > 0) {\n      let message = '';\n      for (const vulnId of spotlightVulnIds) {\n        if (vulnId === 'SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720') {\n          message += theme.color.severity.critical(\n            `${theme.icon.WARNING} WARNING: Critical severity vulnerabilities were found with Log4j!` +\n              EOL,\n          );\n\n          for (const vulnId of foundSpotlightVulnsIds) {\n            message += `  - ${vulnId} (See https://snyk.io/vuln/${vulnId})`;\n          }\n\n          message += EOL + EOL;\n          message +=\n            theme.color.severity.critical(\n              `We highly recommend fixing this vulnerability. If it cannot be fixed by upgrading, see mitigation information here:`,\n            ) +\n            EOL +\n            '  - https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720' +\n            EOL +\n            '  - https://snyk.io/blog/log4shell-remediation-cheat-sheet/' +\n            EOL;\n        }\n      }\n      return message;\n    }\n    return '';\n  } catch (err) {\n    debug('Error in notificationForSpotlightVulns()', err);\n    return '';\n  }\n}\n","// check if vuln was published in the last month\nexport function isNewVuln(vuln) {\n  const MONTH = 30 * 24 * 60 * 60 * 1000;\n  const publicationTime = new Date(vuln.publicationTime).getTime();\n  return publicationTime > Date.now() - MONTH;\n}\n\nexport function isFixable(testResult: any): boolean {\n  return isUpgradable(testResult) || isPatchable(testResult);\n}\n\nexport function hasFixes(testResults: any[]): boolean {\n  return testResults.some(isFixable);\n}\n\nexport function isUpgradable(testResult: any): boolean {\n  if (testResult.remediation) {\n    const {\n      remediation: { upgrade = {}, pin = {} },\n    } = testResult;\n    return Object.keys(upgrade).length > 0 || Object.keys(pin).length > 0;\n  }\n  // if remediation is not available, fallback on vuln properties\n  const { vulnerabilities = {} } = testResult;\n  return vulnerabilities.some(isVulnUpgradable);\n}\n\nexport function hasUpgrades(testResults: any[]): boolean {\n  return testResults.some(isUpgradable);\n}\n\nexport function isPatchable(testResult: any): boolean {\n  if (testResult.remediation) {\n    const {\n      remediation: { patch = {} },\n    } = testResult;\n    return Object.keys(patch).length > 0;\n  }\n  // if remediation is not available, fallback on vuln properties\n  const { vulnerabilities = {} } = testResult;\n  return vulnerabilities.some(isVulnPatchable);\n}\n\nexport function hasPatches(testResults: any[]): boolean {\n  return testResults.some(isPatchable);\n}\n\nexport function isVulnUpgradable(vuln) {\n  return vuln.isUpgradable || vuln.isPinnable;\n}\n\nexport function isVulnPatchable(vuln) {\n  return vuln.isPatchable;\n}\n\nexport function isVulnFixable(vuln) {\n  return isVulnUpgradable(vuln) || isVulnPatchable(vuln);\n}\n"],"names":[],"sourceRoot":""}